stages:
  - build
  - test
  - deploy

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.jvmargs='-Xmx2048m' -Dorg.gradle.parallel=true"
  GRADLE_USER_HOME: "${CI_PROJECT_DIR}/.gradle"
  PUB_CACHE: "${CI_PROJECT_DIR}/.pub-cache"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .gradle/
    - .pub-cache/
    - android/.gradle/
    - build/

build:torrent-engine:
  stage: build
  image: mingc/android-build-box:latest
  script:
    - cd android
    - chmod +x gradlew
    - ./gradlew :torrentengine:assembleRelease --no-daemon --stacktrace
  artifacts:
    paths:
      - android/torrentengine/build/outputs/aar/*.aar
    expire_in: 30 days
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH =~ /^feature\//
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

build:apk-debug:
  stage: build
  image: ghcr.io/cirruslabs/flutter:stable
  script:
    - flutter pub get
    - flutter build apk --debug
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-debug.apk
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_COMMIT_BRANCH =~ /^feature\//
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  allow_failure: true

build:apk-release:
  stage: build
  image: ghcr.io/cirruslabs/flutter:stable
  script:
    - flutter pub get
    - flutter build apk --release --split-per-abi
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/app-arm64-v8a-release.apk
      - build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk
      - build/app/outputs/flutter-apk/app-x86_64-release.apk
    expire_in: 30 days
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_COMMIT_BRANCH =~ /^feature\//
    - if: $CI_COMMIT_TAG
  allow_failure: true

test:flutter-analyze:
  stage: test
  image: ghcr.io/cirruslabs/flutter:stable
  script:
    - flutter pub get
    - flutter analyze
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  allow_failure: true

test:android-lint:
  stage: test
  image: mingc/android-build-box:latest
  script:
    - cd android
    - chmod +x gradlew
    - ./gradlew lint --no-daemon
  artifacts:
    paths:
      - android/app/build/reports/lint-*.html
      - android/torrentengine/build/reports/lint-*.html
    expire_in: 1 week
    when: always
  rules:
    - if: $CI_COMMIT_BRANCH == "dev"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  allow_failure: true

deploy:release:
  stage: deploy
  image: alpine:latest
  needs:
    - build:apk-release
    - build:torrent-engine
  before_script:
    - apk add --no-cache curl jq
  script:
    - |
      # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤–µ—Ä—Å–∏—é —Ä–µ–ª–∏–∑–∞
      if [ -n "$CI_COMMIT_TAG" ]; then
        VERSION="$CI_COMMIT_TAG"
      else
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –∏–∑ –∫–æ–º–º–∏—Ç–∞
        VERSION="v0.0.${CI_PIPELINE_ID}"
      fi
      
      echo "üì¶ Creating GitLab Release: $VERSION"
      echo "üìù Commit: ${CI_COMMIT_SHORT_SHA}"
      echo "üîó Branch: ${CI_COMMIT_BRANCH}"
      
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ APK —Ñ–∞–π–ª–æ–≤
      APK_ARM64="build/app/outputs/flutter-apk/app-arm64-v8a-release.apk"
      APK_ARM32="build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk"
      APK_X86="build/app/outputs/flutter-apk/app-x86_64-release.apk"
      AAR_TORRENT="android/torrentengine/build/outputs/aar/torrentengine-release.aar"
      
      # –°–æ–∑–¥–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞
      RELEASE_DESCRIPTION="## NeoMovies Mobile ${VERSION}
      
      **Build Info:**
      - Commit: \`${CI_COMMIT_SHORT_SHA}\`
      - Branch: \`${CI_COMMIT_BRANCH}\`
      - Pipeline: [#${CI_PIPELINE_ID}](${CI_PIPELINE_URL})
      
      **Downloads:**
      "
      
      # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª—ã
      FILE_COUNT=0
      [ -f "$APK_ARM64" ] && FILE_COUNT=$((FILE_COUNT+1)) && RELEASE_DESCRIPTION="${RELEASE_DESCRIPTION}\n- ARM64 APK: \`app-arm64-v8a-release.apk\`"
      [ -f "$APK_ARM32" ] && FILE_COUNT=$((FILE_COUNT+1)) && RELEASE_DESCRIPTION="${RELEASE_DESCRIPTION}\n- ARM32 APK: \`app-armeabi-v7a-release.apk\`"
      [ -f "$APK_X86" ] && FILE_COUNT=$((FILE_COUNT+1)) && RELEASE_DESCRIPTION="${RELEASE_DESCRIPTION}\n- x86_64 APK: \`app-x86_64-release.apk\`"
      [ -f "$AAR_TORRENT" ] && FILE_COUNT=$((FILE_COUNT+1)) && RELEASE_DESCRIPTION="${RELEASE_DESCRIPTION}\n- TorrentEngine Library: \`torrentengine-release.aar\`"
      
      if [ $FILE_COUNT -eq 0 ]; then
        echo "‚ùå No release artifacts found!"
        exit 1
      fi
      
      echo "‚úÖ Found $FILE_COUNT artifact(s) to release"
      
      # –°–æ–∑–¥–∞–µ–º —Ä–µ–ª–∏–∑ —á–µ—Ä–µ–∑ GitLab API
      RELEASE_PAYLOAD=$(cat <<EOF
      {
        "name": "NeoMovies ${VERSION}",
        "tag_name": "${VERSION}",
        "description": "${RELEASE_DESCRIPTION}",
        "ref": "${CI_COMMIT_SHA}",
        "assets": {
          "links": []
        }
      }
      EOF
      )
      
      echo "üöÄ Creating release via GitLab API..."
      
      RESPONSE=$(curl --fail-with-body -s -X POST \
        "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases" \
        --header "PRIVATE-TOKEN: ${CI_JOB_TOKEN}" \
        --header "Content-Type: application/json" \
        --data "${RELEASE_PAYLOAD}" || echo "FAILED")
      
      if [ "$RESPONSE" = "FAILED" ]; then
        echo "‚ö†Ô∏è  Release API call failed, trying alternative method..."
        # –ï—Å–ª–∏ —Ä–µ–ª–∏–∑ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å
        curl -s -X PUT \
          "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/releases/${VERSION}" \
          --header "PRIVATE-TOKEN: ${CI_JOB_TOKEN}" \
          --header "Content-Type: application/json" \
          --data "${RELEASE_PAYLOAD}"
      fi
      
      echo ""
      echo "‚úÖ Release created successfully!"
      echo "üîó View release: ${CI_PROJECT_URL}/-/releases/${VERSION}"
      echo "üì¶ Pipeline artifacts: ${CI_JOB_URL}/artifacts/browse"
  artifacts:
    paths:
      - build/app/outputs/flutter-apk/*.apk
      - android/torrentengine/build/outputs/aar/*.aar
    expire_in: 90 days
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - if: $CI_COMMIT_BRANCH == "dev"
      when: on_success
    - if: $CI_COMMIT_BRANCH == "main"
      when: on_success
